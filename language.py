class Locale:
    def __init__(self, language):
        if language == "en":
            self.report = "Report"
            self.utils = "Utilities"
            self.register_new_user = "User Registration"
            self.own_keys_sb = "Own Secure Boot keys loaded"
            self.ms_keys = "Microsoft keys loaded"
            self.vendor_keys = "Vendor keys loaded"
            self.tpm_exists = "TPM presence"
            self.tpm_enrolled = "Unlock drive with TPM"
            self.tpm_pin = "Unlock with TPM + PIN"
            self.drive = "Drive"
            self.enroll_tpm = "Register TPM"
            self.delete_tpm = "Delete TPM"
            self.enroll_recovery = "Register recovery key"
            self.delete_recovery = "Delete recovery keys"
            self.delete_password = "Delete passwords"
            self.enroll_password = "Register password"
            self.luks_password = "Password for encrypted partition"
            self.use_pin = "Use PIN"
            self.pin_1 = "Enter PIN"
            self.pin_2 = "Enter PIN (repeat)"
            self.enroll = "Register"
            self.next = "Next"
            self.pin_mismatch = "PINs differ"
            self.pin_msg = "PINs differ. Please try again!"
            self.exit = "Exit"
            self.short_pin = "Short PIN"
            self.short_pin_msg = "PIN must be at least 4 characters long"
            self.enroll_tpm_error = "TPM registration error"
            self.enroll_tpm_error_msg = "An error occurred while registering the TPM. Please check that the password is correct."
            self.success = "Success"
            self.enroll_tpm_success = "TPM drive unlock registration was successful."
            self.failure = "Error"
            self.enroll_tpm_failure = "An error occurred during registration."
            self.delete_tpm_success = "TPM drive unlock was successfully disabled."
            self.delete_tpm_failure = "An error occurred during TPM deregistration."
            self.enroll_recovery_failure = "An error occurred during recovery key registration. Please check your password."
            self.delete_recovery_success = "Disk unlocking with recovery keys has been successfully disabled."
            self.delete_recovery_failed = "An error occurred while deleting recovery keys."
            self.remaining_password = "Enter recovery key"
            self.delete_password_success = "Disk unlocking with passwords has been successfully disabled"
            self.delete_password_failed = "An error occurred while deleting passwords"
            self.remaining_password_true = "Enter password or recovery key"
            self.enter_password_1 = "Enter new password"
            self.enter_password_2 = "Enter new password (repeat)"
            self.passwords_differ = "Passwords are different. Please try again."
            self.enroll_password_error = "An error occurred while registering password. Check your password."
            self.enroll_password_success = "Registration of new password was successful."
            self.copy = "Copy"
            self.error = "Error"
            self.luks_failed = "Unable to detect encrypted partition. Are you sure you are running the program under Secux Linux?"
            self.update = "Update"
            self.update_msg = "Updating securitymanager"
            self.after_update = "You must restart the program to apply the updates"
            self.preset_secure = "Secure (own Secure Boot keys)"
            self.preset_lesssecure = "Backward compatibility (Microsoft keys)"
            self.preset_custom = "Own"
            self.tpm_preset = "Disk unlock profile"
            self.sign_policy = "PCR signing policy"
            self.PCRs_info = ["UEFI executable code", "Host platform configuration", 
                              "UEFI OpROM", "OpROM hardware info",
                              "Boot loader binary and extensions", "GPT/Partition table", "OEM specific data",
                              "SecureBoot state (including keys)", "Kernel cmdline (GRUB)", "All files read (GRUB)", "IMA measurement log", 
                              "UKI components; boot process stages", "UKI cmdline",
                              "UKI initrd extensions", "MOK certificates and hashes", "Encryption key, UUIDs, mountpoints"]
            self.settings = "Settings"
            self.version = 'Version'
            self.source = "Packages source"
            self.online = "online"
            self.offline = "offline"
            self.select_offline_repo = "Select offline repo"
            self.offline_repo = "Offline repo"
            self.repo = "Repository"
            self.download = "Download"
            self.install = "Install"
            self.successfully_downloaded = "The process was completed"
            self.successfully_installed = "The process was completed"
            self.downloading_of_packages = "Installing packages started:"
            self.manage_2fa_users = "Manage 2FA"
            self.managing_2fa_for_users = "Manage two-factor authentication for users"
            self.register = "Register"
            self.show_registration_info = "Registration information"
            self.delete_registration = "Delete registration"
            self.apply_2fa_login = "Apply 2FA to the system when logging in to your account (GNOME, TTY)"
            self.apply_2fa_ssh = "Apply 2FA when logging in via SSH"
            self.success_2fa_1 = "Two-factor authentication for the user"
            self.success_2fa_2 = "successfully connected."
            self.key = "Key"
            self.otp_recovery = "One-time recovery keys:"
            self.already_registered = "The selected user is already registered!"
            self.registration_doesnt_exists = "No registration for the selected user!"
            self.del_register_2fa_success = "User registration deletion completed successfully"
            self.register_info = "Registration information"
            self.save_apply = "Save applications"
            self.apply_success = "Apply success."
            self.missing_deps_2fa = "Missing dependencies for 2FA.\nUse: pacman -S libpam-google-authenticator"
            self.boot_altered_pcr = "IDP: Zeroed boot PCR"
            self.tpm_init_success = "TPM was successfully initialized. Lockout key was saved to"
            self.idp_already_enrolled = "IDP уже зарегестрирован. Удалите IDP перед повторной регистрацией."
            self.hooks_not_found = "HOOKS was not found at /etc/mkinitcpio.conf"

        elif language == "ru":
            self.report = "Отчёт"
            self.utils = "Утилиты"
            self.register_new_user = "Регистрация пользователя"
            self.own_keys_sb = "Загружены собственные ключи Secure Boot"
            self.ms_keys = "Загружены ключи Microsoft"
            self.vendor_keys = "Загружены ключи производителя"
            self.tpm_exists = "Наличие TPM"
            self.tpm_enrolled = "Разблокировка диска с помощью TPM"
            self.tpm_pin = "Разблокировка с TPM + PIN"
            self.drive = "Диск"
            self.enroll_tpm = "Зарегистрировать TPM"
            self.delete_tpm = "Удалить TPM"
            self.enroll_recovery = "Зарегистрировать ключ восстановления"
            self.delete_recovery = "Удалить ключи восстановления"
            self.delete_password = "Удалить пароли"
            self.enroll_password = "Зарегистрировать пароль"
            self.luks_password = "Пароль от зашифрованного раздела"
            self.use_pin = "Использовать ПИН-код"
            self.pin_1 = "Введите ПИН"
            self.pin_2 = "Введите ПИН (повтор)"
            self.enroll = "Зарегистрировать"
            self.next = "Далее" 
            self.pin_mismatch = "ПИН-коды отличаются"
            self.pin_msg = "ПИН-коды отличаются. Пожалуйста, попробуйте снова!"
            self.exit = "Выйти"
            self.short_pin = "Короткий ПИН-код"
            self.short_pin_msg = "ПИН-код должен содержать как минимум 4 символа"
            self.enroll_tpm_error = "Ошибка регистрации TPM"
            self.enroll_tpm_error_msg = "Произошла ошибка при регистрации TPM. Проверьте правильность пароля."
            self.success = "Успех"
            self.enroll_tpm_success = "Регистрация разблокировки диска с помощью TPM произошла успешно."
            self.failure = "Ошибка"
            self.enroll_tpm_failure = "Произошла ошибка в время регистрации."
            self.delete_tpm_success = "Разблокировка диска с помощью TPM успешно отключена."
            self.delete_tpm_failure = "Произошла ошибка в время удаления регистрации TPM."
            self.enroll_recovery_failure = "Произошла ошибка в время регистрации ключа восстановления. Проверьте пароль."
            self.delete_recovery_success = "Разблокировка диска с помощью ключей восстановления успешно отключена."
            self.delete_recovery_failed = "Произошла ошибка в время удаления ключей восстановления"
            self.remaining_password = "Введите ключ восстановления"
            self.delete_password_success = "Разблокировка диска с помощью паролей успешно отключена."
            self.delete_password_failed = "Произошла ошибка в время удаления паролей"
            self.remaining_password_true = "Введите пароль или ключ восстановления"
            self.enter_password_1 = "Введите новый пароль"
            self.enter_password_2 = "Введите новый пароль (повтор)"
            self.passwords_differ = "Пароли отличаются. Пожалуйста, попробуйте снова."
            self.enroll_password_error = "Произошла ошибка в время регистрации пароля. Проверьте пароль."
            self.enroll_password_success = "Регистрация нового пароля произошла успешно."
            self.copy = "Скопировать"
            self.error = "Ошибка"
            self.luks_failed = "Не удалось определить зашифрованный раздел. Вы точно запускаете программу из под Secux Linux?"
            self.update = "Обновить"
            self.update_msg = "Обновление securitymanager"
            self.after_update = "Для применения обновлений необходимо перезапустить программу"
            self.preset_secure = "Безопасный (собственные ключи Secure Boot)"
            self.preset_lesssecure = "Обратная совместимость (наличие ключей Microsoft)"
            self.preset_custom = "Собственный"
            self.tpm_preset = "Профиль разблокировки диска"
            self.sign_policy = "Политика подписи PCR"
            self.PCRs_info = ["Исполняемый код UEFI", "Конфигурация платформы хоста",
                            "UEFI OpROM", "Информация об оборудовании OpROM",
                            "Файл и расширения загрузчика", "Таблица GPT/разделов", "Данные OEM",
                            "Состояние SecureBoot (включая ключи)", "Командная строка ядра (GRUB)", "Все прочитанные файлы (GRUB)", "Журнал измерений IMA",
                            "Компоненты UKI; этапы процесса загрузки", "Командная строка UKI",
                            "Расширения UKI initrd", "Сертификаты и хэши MOK", "Ключ шифрования, UUID, точки монтирования"]
            self.settings = "Настройки"
            self.version = "Версия"
            self.source = "Источник пакетов"
            self.online = "онлайн"
            self.offline = "офлайн"
            self.select_offline_repo = "Выбрать офлайн репозиторий"
            self.offline_repo = "Офлайн репозиторий"
            self.repo = "Репозиторий"
            self.download = "Скачать"
            self.install = 'Установить'
            self.successfully_downloaded = "Процесс был завершен"
            self.successfully_installed = "Процесс был завершен"
            self.downloading_of_packages = "Начата установка пакетов:"
            self.manage_2fa_users = "Управление 2FA"
            self.managing_2fa_for_users = "Управление двухфакторной аутентификацей пользователей"
            self.register = "Зарегистрировать"
            self.show_registration_info = "Информация о регистрации"
            self.delete_registation = "Удалить регистрацию"
            self.apply_2fa_login = "Применить 2FA в системе при входе в аккаунт (GNOME, TTY)"
            self.success_2fa_1 = "Двухфакторная аутентификация для пользователя"
            self.success_2fa_2 = "успешно подключена."
            self.key = "Ключ"
            self.otp_recovery = "Одноразовые запасные ключи восстановления:"
            self.already_registered = "Выбранный пользователь уже зарегистрирован!"
            self.registration_doesnt_exists = "Отсутствует регистрация для выбранного пользователя!"
            self.del_register_2fa_success = "Удаление регистрации пользователя выполнено успешно"
            self.register_info = "Информация о регистрации"
            self.save_apply = "Сохранить применения"
            self.apply_success = "Применение успешно."
            self.missing_deps_2fa = "Отсутствуют зависимости для 2FA.\nИспользуйте: pacman -S libpam-google-authenticator"
            self.boot_altered_pcr = "IDP: Нулевой загрузочный PCR"
            self.tpm_init_success = "TPM успешно инициализирован. Ключ доступа сохранен в"
            self.idp_already_enrolled = "IDP уже зарегестрирован. Удалите IDP перед повторной регистрацией."
            self.hooks_not_found = "HOOKS не были найдены в /etc/mkinitcpio.conf"
